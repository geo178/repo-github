"""
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

[[31, 22],
[37, 43],
[51, 86]]

[[3, 5, 32],
[2, 4, 6],
[1, 64, 8]]

[[3, 5, 8, 3],
[8, 3, 7, 1]]

Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения
двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой
строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""
class Matrix:
    def __init__(self, mtrx):
        self.mtrx = mtrx

    def __str__(self):
        return f"{self.mtrx}"

    def __add__(self, other):
        result = []
        mrt = []
        for i in range(len(self.mtrx)):
            for q in range(len(self.mtrx[i])):
                mrt.append(self.mtrx[i][q] + other.mtrx[i][q])
            result.append(mrt)
            mrt = []
        return Matrix(result)

m_1 = Matrix([[31, 22], [37, 43], [51, 86]])
m_2 = Matrix([[31, 22], [37, 43], [51, 86]])
m_3 = Matrix([[31, 22], [37, 43], [51, 86]])
m_4 = Matrix([[31, 22], [37, 43], [51, 86]])

print(m_1 + m_2 + m_3 + m_4)
